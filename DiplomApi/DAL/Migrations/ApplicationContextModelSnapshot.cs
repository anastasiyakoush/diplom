// <auto-generated />
using System;
using DAL.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiplomApi.Entities.CiklovayaKomissiya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CiklovyeKomissii");
                });

            modelBuilder.Entity("DiplomApi.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistarcionnyjNomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UchebnayaDisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("UchebnayaDisciplinaId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("DiplomApi.Entities.DocumentAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("DocumentsAuthors");
                });

            modelBuilder.Entity("DiplomApi.Entities.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("DiplomApi.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("SpecialnostId")
                        .HasColumnType("int");

                    b.Property<int?>("UchebnyjPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialnostId");

                    b.HasIndex("UchebnyjPlanId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DiplomApi.Entities.ObrazovatelnyjStandart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistarcionnyjNomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialnostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialnostId");

                    b.ToTable("ObrazovatelnyeStandarty");
                });

            modelBuilder.Entity("DiplomApi.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("DiplomApi.Entities.PublicLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalisUroka")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("MetodicheskieNarabotki")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UchebnayaDisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("UchebnayaDisciplinaId");

                    b.ToTable("PublicLessons");
                });

            modelBuilder.Entity("DiplomApi.Entities.Specialnost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialnosti");
                });

            modelBuilder.Entity("DiplomApi.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("CiklovayaKomissiyaId")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiklovayaKomissiyaId");

                    b.HasIndex("PositionId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DiplomApi.Entities.TipovojUchebnyjPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObrazovatelnyjStandartId")
                        .HasColumnType("int");

                    b.Property<string>("RegistarcionnyjNomer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ObrazovatelnyjStandartId");

                    b.ToTable("TipovyeUchebnyePlany");
                });

            modelBuilder.Entity("DiplomApi.Entities.UchebnayaDisciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CiklovayaKomissiyaId")
                        .HasColumnType("int");

                    b.Property<int>("Component")
                        .HasColumnType("int");

                    b.Property<int>("KursovoeProectirovanie")
                        .HasColumnType("int");

                    b.Property<int>("Laboratornye")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Practika")
                        .HasColumnType("int");

                    b.Property<string>("RegistarcionnyjNomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UchebnyjPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiklovayaKomissiyaId");

                    b.HasIndex("UchebnyjPlanId");

                    b.ToTable("UchebnyeDiscipliny");
                });

            modelBuilder.Entity("DiplomApi.Entities.UchebnyjPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistarcionnyjNomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipovojUchebnyjPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipovojUchebnyjPlanId");

                    b.ToTable("UchebnyePlany");
                });

            modelBuilder.Entity("DiplomApi.Entities.Document", b =>
                {
                    b.HasOne("DiplomApi.Entities.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomApi.Entities.UchebnayaDisciplina", "UchebnayaDisciplina")
                        .WithMany()
                        .HasForeignKey("UchebnayaDisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomApi.Entities.DocumentAuthor", b =>
                {
                    b.HasOne("DiplomApi.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("DiplomApi.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("DiplomApi.Entities.Group", b =>
                {
                    b.HasOne("DiplomApi.Entities.Specialnost", "Specialnost")
                        .WithMany()
                        .HasForeignKey("SpecialnostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomApi.Entities.UchebnyjPlan", "UchebnyjPlan")
                        .WithMany("Groups")
                        .HasForeignKey("UchebnyjPlanId");
                });

            modelBuilder.Entity("DiplomApi.Entities.ObrazovatelnyjStandart", b =>
                {
                    b.HasOne("DiplomApi.Entities.Specialnost", "Specialnost")
                        .WithMany()
                        .HasForeignKey("SpecialnostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomApi.Entities.PublicLesson", b =>
                {
                    b.HasOne("DiplomApi.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("DiplomApi.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.HasOne("DiplomApi.Entities.UchebnayaDisciplina", "UchebnayaDisciplina")
                        .WithMany()
                        .HasForeignKey("UchebnayaDisciplinaId");
                });

            modelBuilder.Entity("DiplomApi.Entities.Teacher", b =>
                {
                    b.HasOne("DiplomApi.Entities.CiklovayaKomissiya", "CiklovayaKomissiya")
                        .WithMany()
                        .HasForeignKey("CiklovayaKomissiyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomApi.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomApi.Entities.TipovojUchebnyjPlan", b =>
                {
                    b.HasOne("DiplomApi.Entities.ObrazovatelnyjStandart", "ObrazovatelnyjStandart")
                        .WithMany()
                        .HasForeignKey("ObrazovatelnyjStandartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomApi.Entities.UchebnayaDisciplina", b =>
                {
                    b.HasOne("DiplomApi.Entities.CiklovayaKomissiya", "CiklovayaKomissiya")
                        .WithMany()
                        .HasForeignKey("CiklovayaKomissiyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomApi.Entities.UchebnyjPlan", "UchebnyjPlan")
                        .WithMany()
                        .HasForeignKey("UchebnyjPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomApi.Entities.UchebnyjPlan", b =>
                {
                    b.HasOne("DiplomApi.Entities.TipovojUchebnyjPlan", "TipovojUchebnyjPlan")
                        .WithMany()
                        .HasForeignKey("TipovojUchebnyjPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
